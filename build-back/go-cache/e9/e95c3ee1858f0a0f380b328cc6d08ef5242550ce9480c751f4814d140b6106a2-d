//line /home/cooper/go/src/github.com/hyperledger/fabric/bccsp/idemixerrs.go:1
/*
Copyright IBM Corp. All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/
package bccsp; import _cover_atomic_ "sync/atomic"

import (
	"fmt"
)

type IdemixIIssuerPublicKeyImporterErrorType int

const (
	IdemixIssuerPublicKeyImporterUnmarshallingError IdemixIIssuerPublicKeyImporterErrorType = iota
	IdemixIssuerPublicKeyImporterHashError
	IdemixIssuerPublicKeyImporterValidationError
	IdemixIssuerPublicKeyImporterNumAttributesError
	IdemixIssuerPublicKeyImporterAttributeNameError
)

type IdemixIssuerPublicKeyImporterError struct {
	Type     IdemixIIssuerPublicKeyImporterErrorType
	ErrorMsg string
	Cause    error
}

func (r *IdemixIssuerPublicKeyImporterError) Error() string {_cover_atomic_.AddUint32(&GoCover_4_313533636438613965303331.Count[0], 1);
	if r.Cause != nil {_cover_atomic_.AddUint32(&GoCover_4_313533636438613965303331.Count[2], 1);
		return fmt.Sprintf("%s: %s", r.ErrorMsg, r.Cause)
	}

	_cover_atomic_.AddUint32(&GoCover_4_313533636438613965303331.Count[1], 1);return fmt.Sprintf("%s", r.ErrorMsg)
}

var GoCover_4_313533636438613965303331 = struct {
	Count     [3]uint32
	Pos       [3 * 3]uint32
	NumStmt   [3]uint16
} {
	Pos: [3 * 3]uint32{
		28, 29, 0x14003d, // [0]
		33, 33, 0x260002, // [1]
		29, 31, 0x30014, // [2]
	},
	NumStmt: [3]uint16{
		1, // 0
		1, // 1
		1, // 2
	},
}
var _ = _cover_atomic_.LoadUint32
