//line /home/cooper/go/src/github.com/hyperledger/fabric/common/flogging/fabenc/color.go:1
/*
Copyright IBM Corp. All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/

package fabenc; import _cover_atomic_ "sync/atomic"

import (
	"fmt"
)

type Color uint8

const ColorNone Color = 0

const (
	ColorBlack Color = iota + 30
	ColorRed
	ColorGreen
	ColorYellow
	ColorBlue
	ColorMagenta
	ColorCyan
	ColorWhite
)

func (c Color) Normal() string {_cover_atomic_.AddUint32(&GoCover_0_363135623664303734363938.Count[0], 1);
	return fmt.Sprintf("\x1b[%dm", c)
}

func (c Color) Bold() string {_cover_atomic_.AddUint32(&GoCover_0_363135623664303734363938.Count[1], 1);
	if c == ColorNone {_cover_atomic_.AddUint32(&GoCover_0_363135623664303734363938.Count[3], 1);
		return c.Normal()
	}
	_cover_atomic_.AddUint32(&GoCover_0_363135623664303734363938.Count[2], 1);return fmt.Sprintf("\x1b[%d;1m", c)
}

func ResetColor() string {_cover_atomic_.AddUint32(&GoCover_0_363135623664303734363938.Count[4], 1); return ColorNone.Normal() }

var GoCover_0_363135623664303734363938 = struct {
	Count     [5]uint32
	Pos       [3 * 5]uint32
	NumStmt   [5]uint16
} {
	Pos: [3 * 5]uint32{
		28, 30, 0x20020, // [0]
		32, 33, 0x14001e, // [1]
		36, 36, 0x250002, // [2]
		33, 35, 0x30014, // [3]
		39, 39, 0x37001a, // [4]
	},
	NumStmt: [5]uint16{
		1, // 0
		1, // 1
		1, // 2
		1, // 3
		1, // 4
	},
}
var _ = _cover_atomic_.LoadUint32
