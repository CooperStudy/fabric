//line /home/cooper/go/src/github.com/hyperledger/fabric/protos/discovery/extensions.go:1
/*
Copyright IBM Corp. All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/

package discovery; import _cover_atomic_ "sync/atomic"

import (
	"github.com/golang/protobuf/proto"
)

// QueryType defines the types of service discovery requests
type QueryType uint8

const (
	InvalidQueryType QueryType = iota
	ConfigQueryType
	PeerMembershipQueryType
	ChaincodeQueryType
	LocalMembershipQueryType
)

// GetType returns the type of the request
func (q *Query) GetType() QueryType {_cover_atomic_.AddUint32(&GoCover_0_356230653363363461623832.Count[0], 1);
	if q.GetCcQuery() != nil {_cover_atomic_.AddUint32(&GoCover_0_356230653363363461623832.Count[5], 1);
		return ChaincodeQueryType
	}
	_cover_atomic_.AddUint32(&GoCover_0_356230653363363461623832.Count[1], 1);if q.GetConfigQuery() != nil {_cover_atomic_.AddUint32(&GoCover_0_356230653363363461623832.Count[6], 1);
		return ConfigQueryType
	}
	_cover_atomic_.AddUint32(&GoCover_0_356230653363363461623832.Count[2], 1);if q.GetPeerQuery() != nil {_cover_atomic_.AddUint32(&GoCover_0_356230653363363461623832.Count[7], 1);
		return PeerMembershipQueryType
	}
	_cover_atomic_.AddUint32(&GoCover_0_356230653363363461623832.Count[3], 1);if q.GetLocalPeers() != nil {_cover_atomic_.AddUint32(&GoCover_0_356230653363363461623832.Count[8], 1);
		return LocalMembershipQueryType
	}
	_cover_atomic_.AddUint32(&GoCover_0_356230653363363461623832.Count[4], 1);return InvalidQueryType
}

// ToRequest deserializes this SignedRequest's payload
// and returns the serialized Request in its object form.
// Returns an error in case the operation fails.
func (sr *SignedRequest) ToRequest() (*Request, error) {_cover_atomic_.AddUint32(&GoCover_0_356230653363363461623832.Count[9], 1);
	req := &Request{}
	return req, proto.Unmarshal(sr.Payload, req)
}

// ConfigAt returns the ConfigResult at a given index in the Response,
// or an Error if present.
func (m *Response) ConfigAt(i int) (*ConfigResult, *Error) {_cover_atomic_.AddUint32(&GoCover_0_356230653363363461623832.Count[10], 1);
	r := m.Results[i]
	return r.GetConfigResult(), r.GetError()
}

// MembershipAt returns the PeerMembershipResult at a given index in the Response,
// or an Error if present.
func (m *Response) MembershipAt(i int) (*PeerMembershipResult, *Error) {_cover_atomic_.AddUint32(&GoCover_0_356230653363363461623832.Count[11], 1);
	r := m.Results[i]
	return r.GetMembers(), r.GetError()
}

// EndorsersAt returns the PeerMembershipResult at a given index in the Response,
// or an Error if present.
func (m *Response) EndorsersAt(i int) (*ChaincodeQueryResult, *Error) {_cover_atomic_.AddUint32(&GoCover_0_356230653363363461623832.Count[12], 1);
	r := m.Results[i]
	return r.GetCcQueryRes(), r.GetError()
}

var GoCover_0_356230653363363461623832 = struct {
	Count     [13]uint32
	Pos       [3 * 13]uint32
	NumStmt   [13]uint16
} {
	Pos: [3 * 13]uint32{
		25, 26, 0x1b0025, // [0]
		29, 29, 0x1f0002, // [1]
		32, 32, 0x1d0002, // [2]
		35, 35, 0x1e0002, // [3]
		38, 38, 0x190002, // [4]
		26, 28, 0x3001b, // [5]
		29, 31, 0x3001f, // [6]
		32, 34, 0x3001d, // [7]
		35, 37, 0x3001e, // [8]
		44, 47, 0x20038, // [9]
		51, 54, 0x2003c, // [10]
		58, 61, 0x20048, // [11]
		65, 68, 0x20047, // [12]
	},
	NumStmt: [13]uint16{
		1, // 0
		1, // 1
		1, // 2
		1, // 3
		1, // 4
		1, // 5
		1, // 6
		1, // 7
		1, // 8
		2, // 9
		2, // 10
		2, // 11
		2, // 12
	},
}
var _ = _cover_atomic_.LoadUint32
