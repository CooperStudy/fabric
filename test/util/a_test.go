package util

import (
	"fmt"
	"github.com/hyperledger/fabric/peer/common"
	"strings"
	"testing"
)

func Test(t *testing.T) {
	a := "10 179 7 10 91 8 3 26 11 8 183 230 215 140 6 16 252 252 240 118 42 64 101 56 50 102 54 99 57 54 54 102 99 48 48 50 57 99 100 98 50 100 100 98 98 101 100 51 57 54 98 102 98 50 101 98 53 56 54 100 98 54 99 48 98 50 97 49 55 54 98 53 54 48 55 100 102 98 101 56 98 98 49 97 55 55 58 8 18 6 18 4 108 115 99 99 18 211 6 10 182 6 10 7 79 114 103 49 77 83 80 18 170 6 45 45 45 45 45 66 69 71 73 78 32 67 69 82 84 73 70 73 67 65 84 69 45 45 45 45 45 10 77 73 73 67 75 106 67 67 65 100 71 103 65 119 73 66 65 103 73 82 65 76 118 56 78 100 104 116 73 121 74 71 72 107 49 68 79 43 99 90 102 67 56 119 67 103 89 73 75 111 90 73 122 106 48 69 65 119 73 119 99 122 69 76 10 77 65 107 71 65 49 85 69 66 104 77 67 86 86 77 120 69 122 65 82 66 103 78 86 66 65 103 84 67 107 78 104 98 71 108 109 98 51 74 117 97 87 69 120 70 106 65 85 66 103 78 86 66 65 99 84 68 86 78 104 98 105 66 71 10 99 109 70 117 89 50 108 122 89 50 56 120 71 84 65 88 66 103 78 86 66 65 111 84 69 71 57 121 90 122 69 117 90 88 104 104 98 88 66 115 90 83 53 106 98 50 48 120 72 68 65 97 66 103 78 86 66 65 77 84 69 50 78 104 10 76 109 57 121 90 122 69 117 90 88 104 104 98 88 66 115 90 83 53 106 98 50 48 119 72 104 99 78 77 106 69 120 77 84 69 49 77 68 107 121 78 122 65 119 87 104 99 78 77 122 69 120 77 84 69 122 77 68 107 121 78 122 65 119 10 87 106 66 115 77 81 115 119 67 81 89 68 86 81 81 71 69 119 74 86 85 122 69 84 77 66 69 71 65 49 85 69 67 66 77 75 81 50 70 115 97 87 90 118 99 109 53 112 89 84 69 87 77 66 81 71 65 49 85 69 66 120 77 78 10 85 50 70 117 73 69 90 121 89 87 53 106 97 88 78 106 98 122 69 80 77 65 48 71 65 49 85 69 67 120 77 71 89 50 120 112 90 87 53 48 77 82 56 119 72 81 89 68 86 81 81 68 68 66 90 66 90 71 49 112 98 107 66 118 10 99 109 99 120 76 109 86 52 89 87 49 119 98 71 85 117 89 50 57 116 77 70 107 119 69 119 89 72 75 111 90 73 122 106 48 67 65 81 89 73 75 111 90 73 122 106 48 68 65 81 99 68 81 103 65 69 47 67 67 106 77 72 99 120 10 118 102 113 76 66 51 122 53 86 107 50 114 101 79 97 73 49 80 82 97 97 89 111 114 112 119 47 77 112 55 67 108 110 121 69 83 104 50 122 78 81 90 115 53 112 103 72 74 57 89 118 79 99 108 100 69 109 66 112 104 115 70 112 120 10 119 78 77 90 122 76 115 122 86 108 43 114 72 54 78 78 77 69 115 119 68 103 89 68 86 82 48 80 65 81 72 47 66 65 81 68 65 103 101 65 77 65 119 71 65 49 85 100 69 119 69 66 47 119 81 67 77 65 65 119 75 119 89 68 10 86 82 48 106 66 67 81 119 73 111 65 103 75 50 65 49 104 114 82 54 113 120 108 50 69 66 57 56 119 55 74 102 50 121 109 47 53 116 103 49 118 103 97 101 88 101 74 51 102 76 98 87 76 50 81 119 67 103 89 73 75 111 90 73 10 122 106 48 69 65 119 73 68 82 119 65 119 82 65 73 103 97 100 54 116 65 100 43 111 89 109 105 84 80 66 66 50 106 83 76 77 84 88 115 85 76 121 108 102 71 121 68 69 73 97 108 55 81 87 103 97 102 48 103 67 73 68 67 76 10 106 114 89 71 104 79 113 110 49 100 98 116 47 89 82 76 67 118 68 101 79 100 101 120 85 74 70 106 47 48 114 70 110 74 57 116 87 75 114 108 10 45 45 45 45 45 69 78 68 32 67 69 82 84 73 70 73 67 65 84 69 45 45 45 45 45 10 18 24 252 178 26 16 63 229 238 3 5 27 177 110 72 32 131 25 60 152 143 44 189 60 178 6 18 168 8 10 165 8 10 162 8 8 1 18 6 18 4 108 115 99 99 26 149 8 10 7 105 110 115 116 97 108 108 10 137 8 10 84 8 1 18 80 10 70 103 105 116 104 117 98 46 99 111 109 47 104 121 112 101 114 108 101 100 103 101 114 47 102 97 98 114 105 99 45 115 97 109 112 108 101 115 47 99 104 97 105 110 99 111 100 101 47 99 104 97 105 110 99 111 100 101 95 101 120 97 109 112 108 101 48 50 47 103 111 18 3 97 99 98 26 1 48 26 176 7 31 139 8 0 0 0 0 0 0 255 212 86 203 107 220 70 24 247 85 243 87 124 17 20 164 226 74 178 93 28 48 232 16 210 38 49 129 98 226 210 139 49 101 86 250 180 43 44 205 136 153 79 78 150 98 104 104 75 82 72 160 80 231 208 180 148 62 46 133 30 108 122 40 164 110 154 127 198 187 182 79 253 23 202 232 177 15 103 215 110 19 40 68 23 141 230 245 123 124 191 217 89 173 34 191 155 82 175 236 120 145 204 253 94 191 64 149 97 220 69 229 39 188 163 210 232 29 205 243 34 67 237 71 61 158 138 72 198 56 110 125 140 247 170 193 96 217 239 202 113 183 215 149 11 147 79 16 4 193 234 234 187 213 59 8 130 243 239 149 171 43 75 109 187 238 95 190 186 186 188 178 0 193 194 255 240 148 154 184 90 8 94 27 235 188 184 55 228 41 120 180 195 187 8 57 79 5 99 105 94 72 69 224 48 203 78 114 178 153 101 95 152 13 63 146 106 34 14 190 238 165 249 229 139 10 37 73 106 191 64 84 54 115 25 163 126 129 240 33 106 2 77 170 140 8 62 97 214 109 236 131 249 76 69 151 89 239 113 226 237 199 30 99 73 41 34 112 168 151 106 120 219 44 115 97 93 164 228 104 42 59 96 24 120 215 91 66 155 84 118 214 5 161 74 120 132 46 24 68 239 14 234 66 10 141 6 69 33 149 74 212 139 54 203 40 66 173 29 145 102 238 60 148 93 185 131 175 130 147 228 228 109 168 84 80 38 28 59 12 195 122 167 48 12 109 151 89 137 88 132 130 43 158 35 161 210 176 22 130 65 240 110 34 221 40 69 68 169 20 215 68 188 49 154 224 184 204 242 125 56 251 244 233 233 139 7 131 7 207 135 79 14 7 95 61 30 60 122 118 246 197 227 193 193 179 193 31 251 39 79 63 63 251 250 175 227 163 159 79 126 184 95 79 56 61 252 236 100 255 23 102 165 9 36 2 194 16 108 30 199 198 85 219 176 123 137 94 51 216 240 107 93 50 86 120 205 80 101 194 36 109 151 89 123 128 153 70 24 99 116 145 230 99 52 131 179 48 154 161 153 24 172 18 63 252 237 199 225 119 95 30 31 29 29 63 127 210 40 252 233 215 198 130 135 135 127 255 249 232 244 197 254 224 219 239 207 246 191 57 61 56 24 254 254 112 120 255 96 186 216 239 43 37 149 99 223 193 8 211 93 140 161 20 59 66 222 133 164 49 28 82 177 43 35 110 154 246 156 48 76 26 113 81 26 22 129 171 174 134 173 237 58 191 151 134 163 245 222 118 25 179 118 185 2 50 7 195 96 86 229 203 80 56 102 67 23 174 132 176 92 57 59 67 215 181 56 6 212 196 9 193 80 82 10 35 2 81 230 29 84 32 19 195 168 204 81 144 246 236 198 83 3 226 153 51 23 86 116 183 130 237 10 109 220 29 130 109 207 67 219 193 62 68 92 128 144 4 29 4 204 11 234 79 239 92 29 224 102 235 165 109 198 44 84 106 20 244 141 146 54 13 85 167 69 91 132 173 237 78 191 237 48 107 93 183 162 99 86 93 9 65 164 217 28 42 168 84 211 114 27 248 255 118 194 39 147 247 122 69 157 2 108 228 152 216 79 6 63 180 27 93 83 69 93 154 103 243 122 93 73 113 81 37 45 83 139 181 137 34 42 212 101 70 122 157 80 113 146 106 17 38 157 191 137 116 43 213 36 85 255 134 84 183 177 239 236 96 223 196 238 85 172 182 98 76 80 193 57 60 239 122 38 53 58 109 150 99 147 131 218 141 139 44 234 97 150 201 149 145 67 137 124 121 223 91 92 127 128 247 200 113 27 122 181 243 35 121 231 167 215 115 153 53 67 218 165 218 170 28 89 113 29 225 22 201 251 136 103 37 86 194 103 69 204 204 30 103 204 220 173 53 211 214 253 106 46 113 69 142 192 187 78 21 190 153 17 159 250 109 168 40 129 249 187 66 169 232 66 34 101 12 163 187 23 214 222 210 118 165 191 42 199 30 251 151 247 255 63 0 0 0 255 255 26 197 163 96 20 140 92 0 8 0 0 255 255 245 98 185 42 0 14 0 0] [48 68 2 32 41 170 176 222 168 124 255 106 109 41 167 193 86 16 218 51 24 187 227 79 196 234 141 56 209 81 134 166 158 187 16 186 2 32 100 198 253 249 60 69 100 33 37 130 18 159 59 75 222 188 239 126 153 12 193 128 246 147 75 243 14 125 107 222 148 111"
	str := strings.Replace(a," ",",",-1)
	fmt.Println("str",str)
	str = "{" + str +"}"
	fmt.Println("=====str",str)

	b := []byte{10,179,7,10,91,8,3,26,11,8,183,230,215,140,6,16,252,252,240,118,42,64,101,56,50,102,54,99,57,54,54,102,99,48,48,50,57,99,100,98,50,100,100,98,98,101,100,51,57,54,98,102,98,50,101,98,53,56,54,100,98,54,99,48,98,50,97,49,55,54,98,53,54,48,55,100,102,98,101,56,98,98,49,97,55,55,58,8,18,6,18,4,108,115,99,99,18,211,6,10,182,6,10,7,79,114,103,49,77,83,80,18,170,6,45,45,45,45,45,66,69,71,73,78,32,67,69,82,84,73,70,73,67,65,84,69,45,45,45,45,45,10,77,73,73,67,75,106,67,67,65,100,71,103,65,119,73,66,65,103,73,82,65,76,118,56,78,100,104,116,73,121,74,71,72,107,49,68,79,43,99,90,102,67,56,119,67,103,89,73,75,111,90,73,122,106,48,69,65,119,73,119,99,122,69,76,10,77,65,107,71,65,49,85,69,66,104,77,67,86,86,77,120,69,122,65,82,66,103,78,86,66,65,103,84,67,107,78,104,98,71,108,109,98,51,74,117,97,87,69,120,70,106,65,85,66,103,78,86,66,65,99,84,68,86,78,104,98,105,66,71,10,99,109,70,117,89,50,108,122,89,50,56,120,71,84,65,88,66,103,78,86,66,65,111,84,69,71,57,121,90,122,69,117,90,88,104,104,98,88,66,115,90,83,53,106,98,50,48,120,72,68,65,97,66,103,78,86,66,65,77,84,69,50,78,104,10,76,109,57,121,90,122,69,117,90,88,104,104,98,88,66,115,90,83,53,106,98,50,48,119,72,104,99,78,77,106,69,120,77,84,69,49,77,68,107,121,78,122,65,119,87,104,99,78,77,122,69,120,77,84,69,122,77,68,107,121,78,122,65,119,10,87,106,66,115,77,81,115,119,67,81,89,68,86,81,81,71,69,119,74,86,85,122,69,84,77,66,69,71,65,49,85,69,67,66,77,75,81,50,70,115,97,87,90,118,99,109,53,112,89,84,69,87,77,66,81,71,65,49,85,69,66,120,77,78,10,85,50,70,117,73,69,90,121,89,87,53,106,97,88,78,106,98,122,69,80,77,65,48,71,65,49,85,69,67,120,77,71,89,50,120,112,90,87,53,48,77,82,56,119,72,81,89,68,86,81,81,68,68,66,90,66,90,71,49,112,98,107,66,118,10,99,109,99,120,76,109,86,52,89,87,49,119,98,71,85,117,89,50,57,116,77,70,107,119,69,119,89,72,75,111,90,73,122,106,48,67,65,81,89,73,75,111,90,73,122,106,48,68,65,81,99,68,81,103,65,69,47,67,67,106,77,72,99,120,10,118,102,113,76,66,51,122,53,86,107,50,114,101,79,97,73,49,80,82,97,97,89,111,114,112,119,47,77,112,55,67,108,110,121,69,83,104,50,122,78,81,90,115,53,112,103,72,74,57,89,118,79,99,108,100,69,109,66,112,104,115,70,112,120,10,119,78,77,90,122,76,115,122,86,108,43,114,72,54,78,78,77,69,115,119,68,103,89,68,86,82,48,80,65,81,72,47,66,65,81,68,65,103,101,65,77,65,119,71,65,49,85,100,69,119,69,66,47,119,81,67,77,65,65,119,75,119,89,68,10,86,82,48,106,66,67,81,119,73,111,65,103,75,50,65,49,104,114,82,54,113,120,108,50,69,66,57,56,119,55,74,102,50,121,109,47,53,116,103,49,118,103,97,101,88,101,74,51,102,76,98,87,76,50,81,119,67,103,89,73,75,111,90,73,10,122,106,48,69,65,119,73,68,82,119,65,119,82,65,73,103,97,100,54,116,65,100,43,111,89,109,105,84,80,66,66,50,106,83,76,77,84,88,115,85,76,121,108,102,71,121,68,69,73,97,108,55,81,87,103,97,102,48,103,67,73,68,67,76,10,106,114,89,71,104,79,113,110,49,100,98,116,47,89,82,76,67,118,68,101,79,100,101,120,85,74,70,106,47,48,114,70,110,74,57,116,87,75,114,108,10,45,45,45,45,45,69,78,68,32,67,69,82,84,73,70,73,67,65,84,69,45,45,45,45,45,10,18,24,252,178,26,16,63,229,238,3,5,27,177,110,72,32,131,25,60,152,143,44,189,60,178,6,18,168,8,10,165,8,10,162,8,8,1,18,6,18,4,108,115,99,99,26,149,8,10,7,105,110,115,116,97,108,108,10,137,8,10,84,8,1,18,80,10,70,103,105,116,104,117,98,46,99,111,109,47,104,121,112,101,114,108,101,100,103,101,114,47,102,97,98,114,105,99,45,115,97,109,112,108,101,115,47,99,104,97,105,110,99,111,100,101,47,99,104,97,105,110,99,111,100,101,95,101,120,97,109,112,108,101,48,50,47,103,111,18,3,97,99,98,26,1,48,26,176,7,31,139,8,0,0,0,0,0,0,255,212,86,203,107,220,70,24,247,85,243,87,124,17,20,164,226,74,178,93,28,48,232,16,210,38,49,129,98,226,210,139,49,101,86,250,180,43,44,205,136,153,79,78,150,98,104,104,75,82,72,160,80,231,208,180,148,62,46,133,30,108,122,40,164,110,154,127,198,187,182,79,253,23,202,232,177,15,103,215,110,19,40,68,23,141,230,245,123,124,191,217,89,173,34,191,155,82,175,236,120,145,204,253,94,191,64,149,97,220,69,229,39,188,163,210,232,29,205,243,34,67,237,71,61,158,138,72,198,56,110,125,140,247,170,193,96,217,239,202,113,183,215,149,11,147,79,16,4,193,234,234,187,213,59,8,130,243,239,149,171,43,75,109,187,238,95,190,186,186,188,178,0,193,194,255,240,148,154,184,90,8,94,27,235,188,184,55,228,41,120,180,195,187,8,57,79,5,99,105,94,72,69,224,48,203,78,114,178,153,101,95,152,13,63,146,106,34,14,190,238,165,249,229,139,10,37,73,106,191,64,84,54,115,25,163,126,129,240,33,106,2,77,170,140,8,62,97,214,109,236,131,249,76,69,151,89,239,113,226,237,199,30,99,73,41,34,112,168,151,106,120,219,44,115,97,93,164,228,104,42,59,96,24,120,215,91,66,155,84,118,214,5,161,74,120,132,46,24,68,239,14,234,66,10,141,6,69,33,149,74,212,139,54,203,40,66,173,29,145,102,238,60,148,93,185,131,175,130,147,228,228,109,168,84,80,38,28,59,12,195,122,167,48,12,109,151,89,137,88,132,130,43,158,35,161,210,176,22,130,65,240,110,34,221,40,69,68,169,20,215,68,188,49,154,224,184,204,242,125,56,251,244,233,233,139,7,131,7,207,135,79,14,7,95,61,30,60,122,118,246,197,227,193,193,179,193,31,251,39,79,63,63,251,250,175,227,163,159,79,126,184,95,79,56,61,252,236,100,255,23,102,165,9,36,2,194,16,108,30,199,198,85,219,176,123,137,94,51,216,240,107,93,50,86,120,205,80,101,194,36,109,151,89,123,128,153,70,24,99,116,145,230,99,52,131,179,48,154,161,153,24,172,18,63,252,237,199,225,119,95,30,31,29,29,63,127,210,40,252,233,215,198,130,135,135,127,255,249,232,244,197,254,224,219,239,207,246,191,57,61,56,24,254,254,112,120,255,96,186,216,239,43,37,149,99,223,193,8,211,93,140,161,20,59,66,222,133,164,49,28,82,177,43,35,110,154,246,156,48,76,26,113,81,26,22,129,171,174,134,173,237,58,191,151,134,163,245,222,118,25,179,118,185,2,50,7,195,96,86,229,203,80,56,102,67,23,174,132,176,92,57,59,67,215,181,56,6,212,196,9,193,80,82,10,35,2,81,230,29,84,32,19,195,168,204,81,144,246,236,198,83,3,226,153,51,23,86,116,183,130,237,10,109,220,29,130,109,207,67,219,193,62,68,92,128,144,4,29,4,204,11,234,79,239,92,29,224,102,235,165,109,198,44,84,106,20,244,141,146,54,13,85,167,69,91,132,173,237,78,191,237,48,107,93,183,162,99,86,93,9,65,164,217,28,42,168,84,211,114,27,248,255,118,194,39,147,247,122,69,157,2,108,228,152,216,79,6,63,180,27,93,83,69,93,154,103,243,122,93,73,113,81,37,45,83,139,181,137,34,42,212,101,70,122,157,80,113,146,106,17,38,157,191,137,116,43,213,36,85,255,134,84,183,177,239,236,96,223,196,238,85,172,182,98,76,80,193,57,60,239,122,38,53,58,109,150,99,147,131,218,141,139,44,234,97,150,201,149,145,67,137,124,121,223,91,92,127,128,247,200,113,27,122,181,243,35,121,231,167,215,115,153,53,67,218,165,218,170,28,89,113,29,225,22,201,251,136,103,37,86,194,103,69,204,204,30,103,204,220,173,53,211,214,253,106,46,113,69,142,192,187,78,21,190,153,17,159,250,109,168,40,129,249,187,66,169,232,66,34,101,12,163,187,23,214,222,210,118,165,191,42,199,30,251,151,247,255,63,0,0,0,255,255,26,197,163,96,20,140,92,0,8,0,0,255,255,245,98,185,42,0,14,0,0,48,68,2,32,41,170,176,222,168,124,255,106,109,41,167,193,86,16,218,51,24,187,227,79,196,234,141,56,209,81,134,166,158,187,16,186,2,32,100,198,253,249,60,69,100,33,37,130,18,159,59,75,222,188,239,126,153,12,193,128,246,147,75,243,14,125,107,222,148,111}

    fmt.Println("==========b=============",string(b))
	//
	//Signer, err := common.GetDefaultSignerFnc()
	//fmt.Println("err",err)
	//creator, err :=Signer.Serialize()
	//fmt.Printf("===a:%v\n",creator)
}

func Test1(t *testing.T) {
	signer, _ := common.GetDefaultSigner()
	creator, _ :=signer.Serialize()
	fmt.Printf("===a:%v\n",creator)
}