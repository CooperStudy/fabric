//line /home/cooper/go/src/github.com/hyperledger/fabric/common/configtx/configtx.go:1
/*
Copyright IBM Corp. All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/

package configtx; import _cover_atomic_ "sync/atomic"

import (
	cb "github.com/hyperledger/fabric/protos/common"
)

// Validator provides a mechanism to propose config updates, see the config update results
// and validate the results of a config update.
type Validator interface {
	// Validate attempts to apply a configtx to become the new config
	Validate(configEnv *cb.ConfigEnvelope) error

	// Validate attempts to validate a new configtx against the current config state
	ProposeConfigUpdate(configtx *cb.Envelope) (*cb.ConfigEnvelope, error)

	// ChainID retrieves the chain ID associated with this manager
	ChainID() string

	// ConfigProto returns the current config as a proto
	ConfigProto() *cb.Config

	// Sequence returns the current sequence number of the config
	Sequence() uint64
}

var GoCover_2_346532363364653032376334 = struct {
	Count     [0]uint32
	Pos       [3 * 0]uint32
	NumStmt   [0]uint16
} {
	Pos: [3 * 0]uint32{
	},
	NumStmt: [0]uint16{
	},
}
var _ = _cover_atomic_.LoadUint32
