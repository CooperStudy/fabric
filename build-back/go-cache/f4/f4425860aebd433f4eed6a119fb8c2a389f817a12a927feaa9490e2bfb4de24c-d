//line /home/cooper/go/src/github.com/hyperledger/fabric/orderer/common/metadata/metadata.go:1
/*
Copyright IBM Corp. All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/

package metadata; import _cover_atomic_ "sync/atomic"

import (
	"fmt"
	"runtime"

	common "github.com/hyperledger/fabric/common/metadata"
)

// package-scoped variables

// Package version
var Version string

// package-scoped constants

// Program name
const ProgramName = "orderer"

func GetVersionInfo() string {_cover_atomic_.AddUint32(&GoCover_0_333439316638386237393333.Count[0], 1);
	Version = common.Version
	if Version == "" {_cover_atomic_.AddUint32(&GoCover_0_333439316638386237393333.Count[2], 1);
		Version = "development build"
	}

	_cover_atomic_.AddUint32(&GoCover_0_333439316638386237393333.Count[1], 1);return fmt.Sprintf(
		"%s:\n Version: %s\n Commit SHA: %s\n Go version: %s\n OS/Arch: %s\n",
		ProgramName,
		Version,
		common.CommitSHA,
		runtime.Version(),
		fmt.Sprintf("%s/%s", runtime.GOOS, runtime.GOARCH),
	)
}

var GoCover_0_333439316638386237393333 = struct {
	Count     [3]uint32
	Pos       [3 * 3]uint32
	NumStmt   [3]uint16
} {
	Pos: [3 * 3]uint32{
		26, 28, 0x13001e, // [0]
		32, 39, 0x30002, // [1]
		28, 30, 0x30013, // [2]
	},
	NumStmt: [3]uint16{
		2, // 0
		1, // 1
		1, // 2
	},
}
var _ = _cover_atomic_.LoadUint32
