//line /home/cooper/go/src/github.com/hyperledger/fabric/bccsp/idemix/bridge/rand.go:1
/*
Copyright IBM Corp. All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/
package bridge; import _cover_atomic_ "sync/atomic"

import (
	"github.com/hyperledger/fabric-amcl/amcl"
	cryptolib "github.com/hyperledger/fabric/idemix"
)

// NewRandOrPanic return a new amcl PRG or panic
func NewRandOrPanic() *amcl.RAND {_cover_atomic_.AddUint32(&GoCover_5_373430303738666139356161.Count[0], 1);
	rng, err := cryptolib.GetRand()
	if err != nil {_cover_atomic_.AddUint32(&GoCover_5_373430303738666139356161.Count[2], 1);
		panic(err)
	}
	_cover_atomic_.AddUint32(&GoCover_5_373430303738666139356161.Count[1], 1);return rng
}

var GoCover_5_373430303738666139356161 = struct {
	Count     [3]uint32
	Pos       [3 * 3]uint32
	NumStmt   [3]uint16
} {
	Pos: [3 * 3]uint32{
		14, 16, 0x100022, // [0]
		19, 19, 0xc0002, // [1]
		16, 17, 0xd0010, // [2]
	},
	NumStmt: [3]uint16{
		2, // 0
		1, // 1
		1, // 2
	},
}
var _ = _cover_atomic_.LoadUint32
