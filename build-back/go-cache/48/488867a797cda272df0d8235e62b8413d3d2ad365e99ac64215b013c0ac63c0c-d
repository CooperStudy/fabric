//line /home/cooper/go/src/github.com/hyperledger/fabric/orderer/common/blockcutter/metrics.go:1
/*
Copyright IBM Corp. All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/

package blockcutter; import _cover_atomic_ "sync/atomic"

import "github.com/hyperledger/fabric/common/metrics"

var (
	blockFillDuration = metrics.HistogramOpts{
		Namespace:    "blockcutter",
		Name:         "block_fill_duration",
		Help:         "The time from first transaction enqueing to the block being cut in seconds.",
		LabelNames:   []string{"channel"},
		StatsdFormat: "%{#fqname}.%{channel}",
	}
)

type Metrics struct {
	BlockFillDuration metrics.Histogram
}

func NewMetrics(p metrics.Provider) *Metrics {_cover_atomic_.AddUint32(&GoCover_1_356536373066393635313431.Count[0], 1);
	return &Metrics{
		BlockFillDuration: p.NewHistogram(blockFillDuration),
	}
}

var GoCover_1_356536373066393635313431 = struct {
	Count     [1]uint32
	Pos       [3 * 1]uint32
	NumStmt   [1]uint16
} {
	Pos: [3 * 1]uint32{
		25, 29, 0x2002e, // [0]
	},
	NumStmt: [1]uint16{
		1, // 0
	},
}
var _ = _cover_atomic_.LoadUint32
