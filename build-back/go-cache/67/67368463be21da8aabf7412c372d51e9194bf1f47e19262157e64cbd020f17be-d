//line /home/cooper/go/src/github.com/hyperledger/fabric/core/common/ccprovider/common.go:1
/*
Copyright IBM Corp. All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/

package ccprovider; import _cover_atomic_ "sync/atomic"

import (
	"path/filepath"

	"github.com/hyperledger/fabric/core/config"
)

// GetChaincodeInstallPathFromViper returns the path where chaincodes are installed
func GetChaincodeInstallPathFromViper() string {_cover_atomic_.AddUint32(&GoCover_5_383934626562653839653065.Count[0], 1);
	return filepath.Join(config.GetPath("peer.fileSystemPath"), "chaincodes")
}

// LoadPackage loads a chaincode package from the file system
func LoadPackage(ccname string, ccversion string, path string) (CCPackage, error) {_cover_atomic_.AddUint32(&GoCover_5_383934626562653839653065.Count[1], 1);
	return (&CCInfoFSImpl{}).GetChaincodeFromPath(ccname, ccversion, path)
}

var GoCover_5_383934626562653839653065 = struct {
	Count     [2]uint32
	Pos       [3 * 2]uint32
	NumStmt   [2]uint16
} {
	Pos: [3 * 2]uint32{
		16, 18, 0x20030, // [0]
		21, 23, 0x20053, // [1]
	},
	NumStmt: [2]uint16{
		1, // 0
		1, // 1
	},
}
var _ = _cover_atomic_.LoadUint32
