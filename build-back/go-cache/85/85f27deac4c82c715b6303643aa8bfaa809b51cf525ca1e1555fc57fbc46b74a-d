//line /home/cooper/go/src/github.com/hyperledger/fabric/orderer/common/server/signals.go:1
// +build !windows

/*
Copyright IBM Corp. All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/

package server; import _cover_atomic_ "sync/atomic"

import (
	"os"
	"syscall"

	"github.com/hyperledger/fabric/common/diag"
)

func addPlatformSignals(sigs map[os.Signal]func()) map[os.Signal]func() {_cover_atomic_.AddUint32(&GoCover_3_333331623039636261656262.Count[0], 1);
	sigs[syscall.SIGUSR1] = func() {_cover_atomic_.AddUint32(&GoCover_3_333331623039636261656262.Count[2], 1); diag.LogGoRoutines(logger.Named("diag")) }
	_cover_atomic_.AddUint32(&GoCover_3_333331623039636261656262.Count[1], 1);return sigs
}

var GoCover_3_333331623039636261656262 = struct {
	Count     [3]uint32
	Pos       [3 * 3]uint32
	NumStmt   [3]uint16
} {
	Pos: [3 * 3]uint32{
		18, 19, 0x210049, // [0]
		20, 20, 0xd0002, // [1]
		19, 19, 0x4d0021, // [2]
	},
	NumStmt: [3]uint16{
		1, // 0
		1, // 1
		1, // 2
	},
}
var _ = _cover_atomic_.LoadUint32
