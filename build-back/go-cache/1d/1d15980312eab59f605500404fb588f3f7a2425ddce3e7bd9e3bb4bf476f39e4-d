//line /home/cooper/go/src/github.com/hyperledger/fabric/core/handlers/validation/token/validation.go:1
/*
Copyright IBM Corp. All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/

package token; import _cover_atomic_ "sync/atomic"

import (
	"github.com/hyperledger/fabric/core/handlers/validation/api"
	"github.com/hyperledger/fabric/protos/common"
)

type ValidationFactory struct {
}

func (*ValidationFactory) New() validation.Plugin {_cover_atomic_.AddUint32(&GoCover_0_353934653739653338633833.Count[0], 1);
	return &ValidationPlugin{}
}

type ValidationPlugin struct {
}

func (v *ValidationPlugin) Init(dependencies ...validation.Dependency) error {_cover_atomic_.AddUint32(&GoCover_0_353934653739653338633833.Count[1], 1);
	return nil
}

func (v *ValidationPlugin) Validate(block *common.Block, namespace string, txPosition int, actionPosition int, contextData ...validation.ContextDatum) error {_cover_atomic_.AddUint32(&GoCover_0_353934653739653338633833.Count[2], 1);
	return nil
}

var GoCover_0_353934653739653338633833 = struct {
	Count     [3]uint32
	Pos       [3 * 3]uint32
	NumStmt   [3]uint16
} {
	Pos: [3 * 3]uint32{
		17, 19, 0x20033, // [0]
		24, 26, 0x2004e, // [1]
		28, 30, 0x2009e, // [2]
	},
	NumStmt: [3]uint16{
		1, // 0
		1, // 1
		1, // 2
	},
}
var _ = _cover_atomic_.LoadUint32
