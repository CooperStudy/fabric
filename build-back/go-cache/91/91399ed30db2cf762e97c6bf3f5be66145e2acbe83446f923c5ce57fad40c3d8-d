//line /home/cooper/go/src/github.com/hyperledger/fabric/common/tools/configtxgen/metadata/metadata.go:1
/*
Copyright 2017 Hitachi America

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package metadata; import _cover_atomic_ "sync/atomic"

import (
	"fmt"
	"runtime"
)

// Package version
const Version = "1.4.0"

var CommitSHA string

// Program name
const ProgramName = "configtxgen"

func GetVersionInfo() string {_cover_atomic_.AddUint32(&GoCover_0_383065366538333334336430.Count[0], 1);
	if CommitSHA == "" {_cover_atomic_.AddUint32(&GoCover_0_383065366538333334336430.Count[2], 1);
		CommitSHA = "development build"
	}

	_cover_atomic_.AddUint32(&GoCover_0_383065366538333334336430.Count[1], 1);return fmt.Sprintf("%s:\n Version: %s\n Commit SHA: %s\n Go version: %s\n OS/Arch: %s",
		ProgramName, Version, CommitSHA, runtime.Version(),
		fmt.Sprintf("%s/%s", runtime.GOOS, runtime.GOARCH))
}

var GoCover_0_383065366538333334336430 = struct {
	Count     [3]uint32
	Pos       [3 * 3]uint32
	NumStmt   [3]uint16
} {
	Pos: [3 * 3]uint32{
		32, 33, 0x15001e, // [0]
		37, 39, 0x360002, // [1]
		33, 35, 0x30015, // [2]
	},
	NumStmt: [3]uint16{
		1, // 0
		1, // 1
		1, // 2
	},
}
var _ = _cover_atomic_.LoadUint32
